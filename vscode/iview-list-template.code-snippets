{
    "my iview list template": {
        "scope": "vue",
        "prefix": "ivlist",
        "body": [
            "\t<template>",
            "\t<div>",
            "\t\t<Card dis-hover>",
            "\t\t\t<div class=\"page-body\">",
            "\t\t\t\t<Form ref=\"queryForm\" :label-width=\"80\" label-position=\"left\" inline>",
            "\t\t\t\t\t<Row :gutter=\"16\">",
            "\t\t\t\t\t\t<Col span=\"8\">",
            "\t\t\t\t\t\t\t<FormItem :label=\"L('Keyword')+':'\" style=\"width:100%\">",
            "\t\t\t\t\t\t\t\t<Input v-model=\"keyword\"></Input>",
            "\t\t\t\t\t\t\t</FormItem>",
            "\t\t\t\t\t\t</Col>",
            "\t\t\t\t\t\t<Col span=\"8\">",
            "\t\t\t\t\t\t\t<FormItem :label=\"L('CreationTime')+':'\" style=\"width:100%\">",
            "\t\t\t\t\t\t\t\t<DatePicker  v-model=\"dateRange\" type=\"datetimerange\" format=\"yyyy-MM-dd HH:mm:ss\" style=\"width:100%\" placement=\"bottom-end\" :placeholder=\"L('SelectDate')\"></DatePicker>",
            "\t\t\t\t\t\t\t</FormItem>",
            "\t\t\t\t\t\t</Col>",
            "\t\t\t\t\t\t<Col span=\"8\">",
            "\t\t\t\t\t\t\t<Button icon=\"ios-search\" type=\"primary\" size=\"large\" @click=\"getpage\" class=\"toolbar-btn\">{{L('Find')}}</Button>",
            "\t\t\t\t\t\t</Col>",
            "\t\t\t\t\t</Row>",
            "\t\t\t\t\t<Row>",
            "\t\t\t\t\t\t<Button @click=\"create\" icon=\"android-add\" type=\"primary\" size=\"large\">{{L('Add')}}</Button>",
            "\t\t\t\t\t\t",
            "\t\t\t\t\t</Row>",
            "\t\t\t\t</Form>",
            "\t\t\t\t<div class=\"margin-top-10\">",
            "\t\t\t\t\t<Table :loading=\"loading\" :columns=\"columns\" :no-data-text=\"L('NoDatas')\" border :data=\"list\">",
            "\t\t\t\t\t</Table>",
            "\t\t\t\t\t<Page  show-sizer class-name=\"fengpage\" :total=\"totalCount\" class=\"margin-top-10\" @on-change=\"pageChange\" @on-page-size-change=\"pagesizeChange\" :page-size=\"pageSize\" :current=\"currentPage\"></Page>",
            "\t\t\t\t</div>",
            "\t\t\t</div>",
            "\t\t</Card>",
            "\t\t<create-${1:name} v-model=\"createModalShow\" @save-success=\"getpage\"></create-${1:name}>",
            "\t\t<edit-${1:name} v-model=\"editModalShow\" @save-success=\"getpage\"></edit-${1:name}>",
            "\t</div>",
            "</template>",
            "<script lang=\"ts\">",
            "\timport { Component, Vue,Inject, Prop,Watch } from 'vue-property-decorator';",
            "\timport Util from '../../../lib/util'",
            "\timport AbpBase from '../../../lib/abpbase'",
            "\timport {FieldType,Filter,CompareType} from '../../../store/entities/filter'",
            "\timport PageRequest from '../../../store/entities/page-request'",
            "\timport Create${2:Name} from './create-${1:name}.vue'",
            "\timport Edit${2:Name} from './edit-${1:name}.vue'",
            "",
            "\tclass Page${2:Name}Request extends PageRequest{",
            "\t\tkeyword:String;",
            "\t\tfrom:Date;",
            "\t\tto:Date;",
            "}",
            "",
            "\t@Component({",
            "\t\tcomponents:{Create${2:Name},Edit${2:Name}}",
            "\t})",
            "\texport default class ${2:Name}s extends AbpBase{",
            "\t\tedit(){",
            "\t\t\tthis.editModalShow=true;",
            "\t\t}",
            "\t\tkeyword:String='';",
            "\t\tisActive:Number=2;",
            "\t\tdateRange:Array<Date>=[];",
            "\t\tcreateModalShow:boolean=false;",
            "\t\teditModalShow:boolean=false;",
            "\t\tget list(){",
            "\t\t\treturn this.\\$store.state.${1:name}.list;",
            "\t\t};",
            "\t\tget loading(){",
            "\t\t\treturn this.\\$store.state.${1:name}.loading;",
            "\t\t}",
            "\t\tcreate(){",
            "\t\t\tthis.createModalShow=true;",
            "\t\t}",
            "\t\tisActiveChange(val:string){",
            "\t\t\tif(val==='Actived'){",
            "\t\t\t\tthis.isActive=1;",
            "\t\t\t}else if(val==='NoActive'){",
            "\t\t\t\tthis.isActive=0;",
            "\t\t\t}else{",
            "\t\t\t\tthis.isActive=2;",
            "\t\t\t}",
            "\t\t}",
            "\t\tpageChange(page:number){",
            "\t\t\tthis.\\$store.commit('${1:name}/setCurrentPage',page);",
            "\t\t\tthis.getpage();",
            "\t\t}",
            "\t\tpagesizeChange(pagesize:number){",
            "\t\t\tthis.\\$store.commit('${1:name}/setPageSize',pagesize);",
            "\t\t\tthis.getpage();",
            "\t\t}",
            "\t\tasync getpage(){",
            "\t\t\tlet pagerequest=new Page${2:Name}Request();",
            "\t\t\tpagerequest.maxResultCount=this.pageSize;",
            "\t\t\tpagerequest.skipCount=(this.currentPage-1)*this.pageSize;",
            "\t\t\tpagerequest.keyword=this.keyword;",
            "\t\t\tpagerequest.from=this.dateRange[0];",
            "\t\t\tpagerequest.to=this.dateRange[1];",
            "\t\t\tawait this.\\$store.dispatch({",
            "\t\t\t\ttype:'${1:name}/getAll',",
            "\t\t\t\tdata:pagerequest",
            "\t\t\t})",
            "\t\t}",
            "\t\tget pageSize(){",
            "\t\t\treturn this.\\$store.state.${1:name}.pageSize;",
            "\t\t}",
            "\t\tget totalCount(){",
            "\t\t\treturn this.\\$store.state.${1:name}.totalCount;",
            "\t\t}",
            "\t\tget currentPage(){",
            "\t\t\treturn this.\\$store.state.${1:name}.currentPage;",
            "\t\t}",
            "\t\tcolumns=[{",
            "\t\t\ttitle:this.L('Id'),",
            "\t\t\tkey:'id',",
            "\t\t\twidth:50",
            "\t\t},{",
            "\t\t\ttitle:this.L('标题'),",
            "\t\t\tkey:'title'",
            "\t\t},{",
            "\t\t\ttitle:this.L('图片'),",
            "\t\t\tkey:'imageUrl',",
            "\t\t\trender:(h:any,params:any)=>{",
            "\t\t\t\treturn h('img',{",
            "\t\t\t\t\tattrs:{",
            "\t\t\t\t\t\tsrc:params.row.imageUrl",
            "\t\t\t\t\t},",
            "\t\t\t\t\tstyle:{",
            "\t\t\t\t\t\twidth:'120px'",
            "\t\t\t\t\t}",
            "\t\t\t\t})",
            "\t\t\t}",
            "\t\t},{",
            "\t\t\ttitle:this.L('CreationTime'),",
            "\t\t\tkey:'creationTime',",
            "\t\t\twidth:180,",
            "\t\t\trender:(h:any,params:any)=>{",
            "\t\t\t\treturn h('span',new Date(params.row.creationTime).toLocaleString())",
            "\t\t\t}",
            "\t\t},{",
            "\t\t\ttitle:this.L('Actions'),",
            "\t\t\tkey:'Actions',",
            "\t\t\twidth:150,",
            "\t\t\trender:(h:any,params:any)=>{",
            "\t\t\t\treturn h('div',[",
            "\t\t\t\t\th('Button',{",
            "\t\t\t\t\t\tprops:{",
            "\t\t\t\t\t\t\ttype:'primary',",
            "\t\t\t\t\t\t\tsize:'small'",
            "\t\t\t\t\t\t},",
            "\t\t\t\t\t\tstyle:{",
            "\t\t\t\t\t\t\tmarginRight:'5px'",
            "\t\t\t\t\t\t},",
            "\t\t\t\t\t\ton:{",
            "\t\t\t\t\t\t\tclick:()=>{",
            "\t\t\t\t\t\t\t\tthis.\\$store.commit('${1:name}/edit',params.row);",
            "\t\t\t\t\t\t\t\tthis.edit();",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t},this.L('Edit')),",
            "\t\t\t\t\th('Button',{",
            "\t\t\t\t\t\tprops:{",
            "\t\t\t\t\t\t\ttype:'error',",
            "\t\t\t\t\t\t\tsize:'small'",
            "\t\t\t\t\t\t},",
            "\t\t\t\t\t\ton:{",
            "\t\t\t\t\t\t\tclick:async ()=>{",
            "\t\t\t\t\t\t\t\tthis.\\$Modal.confirm({",
            "\t\t\t\t\t\t\t\t\t\ttitle:this.L('Tips'),",
            "\t\t\t\t\t\t\t\t\t\tcontent:this.L('DeleteConfirm'),",
            "\t\t\t\t\t\t\t\t\t\tokText:this.L('Yes'),",
            "\t\t\t\t\t\t\t\t\t\tcancelText:this.L('No'),",
            "\t\t\t\t\t\t\t\t\t\tonOk:async()=>{",
            "\t\t\t\t\t\t\t\t\t\t\tawait this.\\$store.dispatch({",
            "\t\t\t\t\t\t\t\t\t\t\t\ttype:'${1:name}/delete',",
            "\t\t\t\t\t\t\t\t\t\t\t\tdata:params.row",
            "\t\t\t\t\t\t\t\t\t\t\t})",
            "\t\t\t\t\t\t\t\t\t\t\tawait this.getpage();",
            "\t\t\t\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t\t\t})",
            "\t\t\t\t\t\t\t}",
            "\t\t\t\t\t\t}",
            "\t\t\t\t\t},this.L('Delete'))",
            "\t\t\t\t])",
            "\t\t\t}",
            "\t\t}]",
            "\t\tasync created(){",
            "\t\t\tthis.getpage();",
            "\t\t}",
            "\t}",
            "</script>",
        ]
    }
}