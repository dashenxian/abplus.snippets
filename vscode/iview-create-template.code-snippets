{
	"my iview create template": {
		"scope": "vue",
		"prefix": "ivcreate",
		"body": [
			"<template>",
			"<div>",
			"\t<Modal",
			"\t:title=\"L('Create')\"",
			"\t:value=\"value\"",
			"\t@on-ok=\"save\"",
			"\t@on-visible-change=\"visibleChange\"",
			"\t>",
			"\t\t<Form ref=\"${1:name}Form\"  label-position=\"top\" :rules=\"${1:name}Rule\" :model=\"${1:name}\">",
			"\t\t<FormItem :label=\"L('FormItem')\" prop=\"${3:prop}\">",
			"\t\t\t<Input v-model=\"${1:name}.${3:prop}\" :maxlength=\"128\"></Input>",
			"\t\t</FormItem>",
			"\t\t<!--<FormItem :label=\"L('图片')\" prop=\"image\">",
			"\t\t\t<jsx-upload-files ref=\"uploader\" :maxFileLimit=\"1\" @upload-success=\"uploadCover\" @remove-file=\"removeCover\"></jsx-upload-files>",
			"\t\t</FormItem>",
			"\t\t<FormItem :label=\"L('FormItem')\" prop=\"${3:prop}\">",
			"\t\t\t<Input v-model=\"${1:name}.${3:prop}\" :maxlength=\"512\"></Input>",
			"\t\t</FormItem>-->",
			"\t\t</Form>",
			"\t\t<div slot=\"footer\">",
			"\t\t\t<Button @click=\"cancel\">{{L('Cancel')}}</Button>",
			"\t\t\t<Button @click=\"save\" type=\"primary\">{{L('OK')}}</Button>",
			"\t\t</div>",
			"\t</Modal>",
			"</div>",
			"</template>",
			"<script lang=\"ts\">",
			"\timport { Component, Vue,Inject, Prop,Watch } from 'vue-property-decorator';",
			"\timport Util from '../../../lib/util'",
			"\timport AbpBase from '../../../lib/abpbase'",
			"\timport ${2:Name} from '../../../store/entities/${1:name}'",
			"\t//import jsxUploadFiles from '../../../components/jsx-upload-files.vue';",
			"\t@Component({",
			"\t\t//components: { jsxUploadFiles }",
			"\t})",
			"\texport default class Create${2:Name} extends AbpBase{",
			"\t\t@Prop({type:Boolean,default:false}) value:boolean;",
			"\t\t${1:name}:${2:Name}=new ${2:Name}();",
			"",
			"\t\t//uploadCover(file: any) {",
			"\t\t\t//this.${1:name}.image = file.url;",
			"\t\t//}",
			"\t\t//removeCover(file: any) {",
			"\t\t\t//this.${1:name}.image = '';",
			"\t\t//}",
			"\t\tsave(){",
			"\t\t\t//封面图",
			"\t\t\t//if (this.${1:name}.image == undefined || this.${1:name}.image.length == 0) {",
			"\t\t\t\t//this.$Notice.error({",
			"\t\t\t\t\t//title: '图片未上传！',",
			"\t\t\t\t\t//desc: '请上传图片！'",
			"\t\t\t\t//});",
			"\t\t\t\t//return;",
			"\t\t\t//}",
			"\t\t\t(this.\\$refs.${1:name}Form as any).validate(async (valid:boolean)=>{",
			"\t\t\t\tif(valid){",
			"\t\t\t\t\tawait this.\\$store.dispatch({",
			"\t\t\t\t\ttype:'${1:name}/create',",
			"\t\t\t\t\tdata:this.${1:name}",
			"\t\t\t\t});",
			"\t\t\t\tthis.clearForm();",
			"\t\t\t\tthis.\\$emit('save-success');",
			"\t\t\t\tthis.\\$emit('input',false);",
			"\t\t\t\t}",
			"\t\t\t})",
			"\t\t}",
			"\t\tcancel(){",
			"\t\t\tthis.clearForm();",
			"\t\t\tthis.\\$emit('input',false);",
			"\t\t}",
			"\t\tvisibleChange(value:boolean){",
			"\t\t\tif(!value){",
			"\t\t\t\tthis.\\$emit('input',value);",
			"\t\t\t}",
			"\t\t}",
			"\t\tclearForm() {",
			"\t\t\t(this.\\$refs.${1:name}Form as any).resetFields();",
			"\t\t\t//(<any>this.\\$refs.uploader).clearFiles();",
			"\t\t}",
			"\t\t${1:name}Rule={",
			"\t\t\t${3:prop}:[{required: true,message:'Messages',trigger: 'blur'}],",
			"\t\t\t${3:prop}:[{required:true,message:'Messages',trigger: 'blur'}]",
			"\t\t}",
			"\t}",
			"</script>"
		]
	}
}