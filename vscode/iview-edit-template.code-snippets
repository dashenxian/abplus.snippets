{
	"my iview edit template": {
		"scope": "vue",
		"prefix": "ivedit",
		"body": [
			"<template>",
			"\t<div>",
			"\t\t<Modal",
			"\t\t\t:title=\"L('Edit')\"",
			"\t\t\t:value=\"value\"",
			"\t\t\t@on-ok=\"save\"",
			"\t\t\t@on-visible-change=\"visibleChange\"",
			"\t\t>",
			"\t\t\t<Form ref=\"${1:name}Form\"  label-position=\"top\" :rules=\"${1:name}Rule\" :model=\"${1:name}\">",
			"\t\t\t\t<FormItem :label=\"L('Label')\" prop=\"${3:prop}\">",
			"\t\t\t\t\t<Input v-model=\"${1:name}.${3:prop}\" :maxlength=\"128\"></Input>",
			"\t\t\t\t</FormItem>",
			"\t\t<!--<FormItem :label=\"L('图片')\" prop=\"image\">",
			"\t\t\t<jsx-upload-files ref=\"uploader\" :maxFileLimit=\"1\" @upload-success=\"uploadCover\" @remove-file=\"removeCover\"></jsx-upload-files>",
			"\t\t</FormItem>",
			"\t\t<FormItem :label=\"L('FormItem')\" prop=\"${3:prop}\">",
			"\t\t\t<Input v-model=\"${1:name}.${3:prop}\" :maxlength=\"512\"></Input>",
			"\t\t</FormItem>-->",
			"\t\t\t</Form>",
			"\t\t\t<div slot=\"footer\">",
			"\t\t\t\t<Button @click=\"cancel\">{{L('Cancel')}}</Button>",
			"\t\t\t\t<Button @click=\"save\" type=\"primary\">{{L('OK')}}</Button>",
			"\t\t\t</div>",
			"\t\t</Modal>",
			"\t</div>",
			"</template>",
			"<script lang=\"ts\">",
			"import { Component, Vue, Inject, Prop, Watch } from \"vue-property-decorator\";",
			"import Util from \"../../../lib/util\";",
			"import AbpBase from \"../../../lib/abpbase\";",
			"import ${2:Name} from \"../../../store/entities/${1:name}\";",
			"\t//import jsxUploadFiles from '../../../components/jsx-upload-files.vue';",
			"\t@Component({",
			"\t\t//components: { jsxUploadFiles }",
			"\t})",
			"export default class Edit${2:Name} extends AbpBase {",
			"\t@Prop({ type: Boolean, default: false })",
			"\tvalue: boolean;",
			"\t${1:name}:${2:Name} = new ${2:Name}();",
			"",
			"\t\t//uploadCover(file: any) {",
			"\t\t\t//this.${1:name}.image = file.url;",
			"\t\t//}",
			"\t\t//removeCover(file: any) {",
			"\t\t\t//this.${1:name}.image = '';",
			"\t\t//}",
			"\tsave() {",
			"\t\t\t//封面图",
			"\t\t\t//if (this.${1:name}.image == undefined || this.${1:name}.image.length == 0) {",
			"\t\t\t\t//this.\\$Notice.error({",
			"\t\t\t\t\t//title: '图片未上传！',",
			"\t\t\t\t\t//desc: '请上传图片！'",
			"\t\t\t\t//});",
			"\t\t\t\t//return;",
			"\t\t\t//}",
			"\t(this.\\$refs.${1:name}Form as any).validate(async (valid: boolean) => {",
			"\t\tif (valid) {",
			"\t\tawait this.\\$store.dispatch({",
			"\t\t\ttype: \"${1:name}/update\",",
			"\t\t\tdata: this.${1:name}",
			"\t\t});",
			"\t\t\t\tthis.clearForm();",
			"\t\tthis.\\$emit(\"save-success\");",
			"\t\tthis.\\$emit(\"input\", false);",
			"\t\t}",
			"\t});",
			"\t}",
			"\tcancel() {",
			"\t\t\t\tthis.clearForm();",
			"\tthis.\\$emit(\"input\", false);",
			"\t}",
			"\tvisibleChange(value: boolean) {",
			"\tif (!value) {",
			"\t\tthis.\\$emit(\"input\", value);",
			"\t} else {",
			"\t\tthis.${1:name} = Util.extend(true, {}, this.\\$store.state.${1:name}.edit${2:Name});",
			"\t\t//初始化上传组件",
			"\t\t//(<any>this.\\$refs.uploader).loadDefaultList([",
			"\t\t\t//{ name: this.${1:name}.image, url: this.${1:name}.image }",
			"\t\t//]);",
			"\t}",
			"\t}",
			"\t\tclearForm() {",
			"\t\t\t(this.\\$refs.${1:name}Form as any).resetFields();",
			"\t\t\t//(<any>this.\\$refs.uploader).clearFiles();",
			"\t\t}",
			"\t${1:name}Rule = {",
			"\t\t${3:prop}:[{required: true,message:'Messages',trigger: 'blur'}],",
			"\t\t\t${3:prop}:[{required:true,message:'Messages',trigger: 'blur'}]",
			"\t};",
			"}",
			"</script>",
		]
	}
}